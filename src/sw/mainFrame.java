/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sw;

import javafx.collections.FXCollections;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.chart.BarChart;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.XYChart;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.print.PrinterException;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import java.sql.*; 
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.concurrent.TimeUnit;
import javafx.application.Platform;
import javafx.embed.swing.JFXPanel;
import javafx.scene.chart.CategoryAxis;
/**
 *
 * @author lskre
 */
public class mainFrame extends javax.swing.JFrame {

          /**
         * Creates new form mainFrame
          */
         public mainFrame() {
		
		setUndecorated(true);
		initComponents();
		this.setLocationRelativeTo(null);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		setAllSidePanelInvisible();
		setupjTable4();
		
		Platform.setImplicitExit(false);
		
		this.setVisible(true);
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        InventoryO = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        TransactionO = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        RevenueO = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        PrintO = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        NewTransactionO = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        sidePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        inventoryTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        jPanel22 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        inventoryPane = new javax.swing.JLayeredPane();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        thresholdPrinterPanel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        thresholdTable = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        revenuePane = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        totalRevenueTodayLabel = new javax.swing.JLabel();
        totalRevenueMonthLabel = new javax.swing.JLabel();
        sellRevenueTodayLabel = new javax.swing.JLabel();
        sellRevenueMonthLabel = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        buyRevenueTodayLabel = new javax.swing.JLabel();
        buyRevenueMonthLabel = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        totalProfitTodayLabel = new javax.swing.JLabel();
        totalProfitMonthLabel = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        newTransactionPane = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel20 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        printPane = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        transactionTable = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        changeItemForm = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        quantitySoldChange = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        vendorsChange = new javax.swing.JTextPane();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        changeItemButton = new javax.swing.JButton();
        addItemError23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        addItemError24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        thresholdChange = new javax.swing.JTextField();
        addItemError25 = new javax.swing.JLabel();
        addItemError26 = new javax.swing.JLabel();
        quantityChange = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        sellingCostChange = new javax.swing.JTextField();
        addItemError22 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        itemNameChange = new javax.swing.JTextField();
        buyingCostChange = new javax.swing.JTextField();
        itemId = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        addItemError21 = new javax.swing.JLabel();
        newItemForm = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        itemNameNew = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        thresholdNew = new javax.swing.JTextField();
        quantityNew = new javax.swing.JTextField();
        sellingCostNew = new javax.swing.JTextField();
        buyingCostNew = new javax.swing.JTextField();
        quantitySoldNew = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        vendorsNew = new javax.swing.JTextPane();
        addItemButton = new javax.swing.JButton();
        addItemError1 = new javax.swing.JLabel();
        addItemError2 = new javax.swing.JLabel();
        addItemError3 = new javax.swing.JLabel();
        addItemError4 = new javax.swing.JLabel();
        addItemError5 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        sidePanelTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(36, 47, 65));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("MPSS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 20, -1, -1));

        jSeparator1.setBackground(new java.awt.Color(204, 204, 204));
        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 290, 10));

        InventoryO.setBackground(new java.awt.Color(50, 66, 91));
        InventoryO.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        InventoryO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InventoryOMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("INVENTORY");

        javax.swing.GroupLayout InventoryOLayout = new javax.swing.GroupLayout(InventoryO);
        InventoryO.setLayout(InventoryOLayout);
        InventoryOLayout.setHorizontalGroup(
            InventoryOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryOLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel4)
                .addContainerGap(101, Short.MAX_VALUE))
        );
        InventoryOLayout.setVerticalGroup(
            InventoryOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryOLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel4)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel1.add(InventoryO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 310, 60));

        TransactionO.setBackground(new java.awt.Color(50, 66, 91));
        TransactionO.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TransactionO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TransactionOMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("TRANSACTIONS");

        javax.swing.GroupLayout TransactionOLayout = new javax.swing.GroupLayout(TransactionO);
        TransactionO.setLayout(TransactionOLayout);
        TransactionOLayout.setHorizontalGroup(
            TransactionOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TransactionOLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jLabel5)
                .addContainerGap(82, Short.MAX_VALUE))
        );
        TransactionOLayout.setVerticalGroup(
            TransactionOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TransactionOLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(17, 17, 17))
        );

        jPanel1.add(TransactionO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 310, 60));

        RevenueO.setBackground(new java.awt.Color(50, 66, 91));
        RevenueO.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RevenueO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RevenueOMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("REVENUE");

        javax.swing.GroupLayout RevenueOLayout = new javax.swing.GroupLayout(RevenueO);
        RevenueO.setLayout(RevenueOLayout);
        RevenueOLayout.setHorizontalGroup(
            RevenueOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RevenueOLayout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(jLabel6)
                .addContainerGap(113, Short.MAX_VALUE))
        );
        RevenueOLayout.setVerticalGroup(
            RevenueOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RevenueOLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(17, 17, 17))
        );

        jPanel1.add(RevenueO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 310, 60));

        PrintO.setBackground(new java.awt.Color(50, 66, 91));
        PrintO.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PrintO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintOMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("PRINT");

        javax.swing.GroupLayout PrintOLayout = new javax.swing.GroupLayout(PrintO);
        PrintO.setLayout(PrintOLayout);
        PrintOLayout.setHorizontalGroup(
            PrintOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrintOLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jLabel7)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        PrintOLayout.setVerticalGroup(
            PrintOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrintOLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(17, 17, 17))
        );

        jPanel1.add(PrintO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 310, 60));

        NewTransactionO.setBackground(new java.awt.Color(50, 66, 91));
        NewTransactionO.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NewTransactionO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NewTransactionOMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("NEW TRANSACTION");

        javax.swing.GroupLayout NewTransactionOLayout = new javax.swing.GroupLayout(NewTransactionO);
        NewTransactionO.setLayout(NewTransactionOLayout);
        NewTransactionOLayout.setHorizontalGroup(
            NewTransactionOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewTransactionOLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel8)
                .addContainerGap(62, Short.MAX_VALUE))
        );
        NewTransactionOLayout.setVerticalGroup(
            NewTransactionOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewTransactionOLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(17, 17, 17))
        );

        jPanel1.add(NewTransactionO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 310, 60));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 730));

        sidePanel.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel1.setText("Close");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        sidePanel.add(jLabel1);
        jLabel1.setBounds(830, 10, 36, 17);

        jSeparator2.setBackground(new java.awt.Color(153, 153, 153));
        jSeparator2.setForeground(new java.awt.Color(153, 153, 153));
        jSeparator2.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        sidePanel.add(jSeparator2);
        jSeparator2.setBounds(10, 60, 860, 20);

        inventoryTable.setPreferredSize(new java.awt.Dimension(860, 660));
        inventoryTable.setRequestFocusEnabled(false);

        jTable1.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "stock", "threshold", "selling Cost", "Buying Cost", "Items sold till Date", "Vendors"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(25);
        }

        jPanel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel15.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel15MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel15MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel15MouseExited(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel35.setText("PRINT INVENTORY");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jLabel35)
                .addGap(40, 40, 40))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel21.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jPanel21.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel21MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel21MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel21MouseExited(evt);
            }
        });

        jLabel50.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sw/if_icon-111-search_314478(1).png"))); // NOI18N

        searchField.setBackground(new java.awt.Color(240, 240, 240));
        searchField.setForeground(new java.awt.Color(204, 204, 204));
        searchField.setText("Item Id or Item Name");
        searchField.setBorder(null);
        searchField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFieldMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchFieldMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchFieldMouseExited(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchField, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel22.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel22MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel22MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel22MouseExited(evt);
            }
        });

        jLabel49.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel49.setText("RESET");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel49)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout inventoryTableLayout = new javax.swing.GroupLayout(inventoryTable);
        inventoryTable.setLayout(inventoryTableLayout);
        inventoryTableLayout.setHorizontalGroup(
            inventoryTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
            .addGroup(inventoryTableLayout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        inventoryTableLayout.setVerticalGroup(
            inventoryTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryTableLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(inventoryTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        sidePanel.add(inventoryTable);
        inventoryTable.setBounds(10, 60, 860, 660);

        inventoryPane.setForeground(new java.awt.Color(240, 240, 240));
        inventoryPane.setOpaque(true);

        jPanel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel8MouseExited(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel9.setText("NEW ITEM");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sw/if_plus_1814113(1).png"))); // NOI18N
        jLabel10.setText("jLabel10");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        inventoryPane.add(jPanel8);
        jPanel8.setBounds(301, 105, 250, 77);

        jPanel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel9.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel9MouseExited(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel13.setText("CHANGE ITEM");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel13)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        inventoryPane.add(jPanel9);
        jPanel9.setBounds(301, 200, 250, 77);

        jPanel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel10.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel10MouseExited(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel14.setText("LIST INVENTORY");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel14)
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        inventoryPane.add(jPanel10);
        jPanel10.setBounds(300, 300, 250, 77);

        jPanel2.setForeground(new java.awt.Color(240, 240, 240));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 860, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );

        inventoryPane.add(jPanel2);
        jPanel2.setBounds(0, 0, 860, 660);

        sidePanel.add(inventoryPane);
        inventoryPane.setBounds(10, 60, 860, 660);

        thresholdTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item Id", "Item Name", "Quantity", "Cost", "Vendors"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(thresholdTable);
        if (thresholdTable.getColumnModel().getColumnCount() > 0) {
            thresholdTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        }

        jPanel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel16.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel16MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel16MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel16MouseExited(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel47.setText("PRINT TABLE");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel47)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout thresholdPrinterPanelLayout = new javax.swing.GroupLayout(thresholdPrinterPanel);
        thresholdPrinterPanel.setLayout(thresholdPrinterPanelLayout);
        thresholdPrinterPanelLayout.setHorizontalGroup(
            thresholdPrinterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
            .addGroup(thresholdPrinterPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        thresholdPrinterPanelLayout.setVerticalGroup(
            thresholdPrinterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(thresholdPrinterPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        sidePanel.add(thresholdPrinterPanel);
        thresholdPrinterPanel.setBounds(10, 60, 860, 660);

        jLabel36.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel36.setText("Total Revenue Today:");

        jLabel37.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel37.setText("Total Revenue Last Month:");

        totalRevenueTodayLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        totalRevenueTodayLabel.setText("0");

        totalRevenueMonthLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        totalRevenueMonthLabel.setText("0");

        sellRevenueTodayLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        sellRevenueTodayLabel.setText("0");

        sellRevenueMonthLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        sellRevenueMonthLabel.setText("0");

        jLabel41.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel41.setText("Sell Revenue Today:");

        jLabel42.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel42.setText("Sell Revenue Last Month:");

        buyRevenueTodayLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        buyRevenueTodayLabel.setText("0");

        buyRevenueMonthLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        buyRevenueMonthLabel.setText("0");

        jLabel43.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel43.setText("Buy Revenue Today:");

        jLabel44.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel44.setText("Buy Revenue Last Month:");

        totalProfitTodayLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        totalProfitTodayLabel.setText("0");

        totalProfitMonthLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        totalProfitMonthLabel.setText("0");

        jLabel45.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel45.setText("Total Profit Today:");

        jLabel46.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel46.setText("Total Profit Last Month:");

        jPanel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel13.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel13MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel13MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel13MouseExited(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel33.setText("GENERATE SALES GRAPH");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel33)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout revenuePaneLayout = new javax.swing.GroupLayout(revenuePane);
        revenuePane.setLayout(revenuePaneLayout);
        revenuePaneLayout.setHorizontalGroup(
            revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(revenuePaneLayout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(revenuePaneLayout.createSequentialGroup()
                        .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel37)
                            .addComponent(jLabel45)
                            .addComponent(jLabel44)
                            .addComponent(jLabel46)
                            .addComponent(jLabel42))
                        .addGap(18, 18, 18)
                        .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalProfitTodayLabel)
                            .addComponent(totalRevenueMonthLabel)
                            .addComponent(sellRevenueMonthLabel)
                            .addComponent(buyRevenueMonthLabel)
                            .addComponent(totalProfitMonthLabel)))
                    .addGroup(revenuePaneLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel36)
                        .addGap(18, 18, 18)
                        .addComponent(totalRevenueTodayLabel))
                    .addGroup(revenuePaneLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(revenuePaneLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel43))
                        .addGap(18, 18, 18)
                        .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buyRevenueTodayLabel)
                            .addComponent(sellRevenueTodayLabel))))
                .addContainerGap(303, Short.MAX_VALUE))
        );
        revenuePaneLayout.setVerticalGroup(
            revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(revenuePaneLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(totalRevenueTodayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(sellRevenueTodayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(buyRevenueTodayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(totalProfitTodayLabel))
                .addGap(32, 32, 32)
                .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(totalRevenueMonthLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(sellRevenueMonthLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(buyRevenueMonthLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(revenuePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(totalProfitMonthLabel))
                .addGap(50, 50, 50)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
        );

        sidePanel.add(revenuePane);
        revenuePane.setBounds(10, 60, 860, 660);

        jPanel18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel18.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel18MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel18MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel18MouseExited(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel38.setText("MAKE TRANSACTION");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel38)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable3.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Id", "Item Name", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setPreferredWidth(20);
        }

        jPanel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel20.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel20MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel20MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel20MouseExited(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel40.setText("REFRESH");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLabel40)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable4.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Add", "Item Id", "Item Name", "stock", "threshold", "selling Cost", "Buying Cost", "Items sold till Date", "Vendors"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable4);
        if (jTable4.getColumnModel().getColumnCount() > 0) {
            jTable4.getColumnModel().getColumn(0).setPreferredWidth(15);
            jTable4.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTable4.getColumnModel().getColumn(3).setPreferredWidth(20);
            jTable4.getColumnModel().getColumn(4).setPreferredWidth(25);
            jTable4.getColumnModel().getColumn(5).setPreferredWidth(25);
            jTable4.getColumnModel().getColumn(6).setPreferredWidth(25);
            jTable4.getColumnModel().getColumn(7).setPreferredWidth(25);
        }

        javax.swing.GroupLayout newTransactionPaneLayout = new javax.swing.GroupLayout(newTransactionPane);
        newTransactionPane.setLayout(newTransactionPaneLayout);
        newTransactionPaneLayout.setHorizontalGroup(
            newTransactionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
            .addGroup(newTransactionPaneLayout.createSequentialGroup()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(newTransactionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE))
        );
        newTransactionPaneLayout.setVerticalGroup(
            newTransactionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newTransactionPaneLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(newTransactionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 304, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(newTransactionPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(newTransactionPaneLayout.createSequentialGroup()
                    .addGap(59, 59, 59)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(310, Short.MAX_VALUE)))
        );

        sidePanel.add(newTransactionPane);
        newTransactionPane.setBounds(10, 60, 860, 660);

        jPanel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel11.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel11MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel11MouseExited(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel31.setText("PRINT INVENTORY");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel31)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel12.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel12MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel12MouseExited(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel32.setText("PRINT TRANSACTIONS");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel32)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel17.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel17MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel17MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel17MouseExited(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel48.setText("LIST ITEMS LOW ON STOCK");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel48)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout printPaneLayout = new javax.swing.GroupLayout(printPane);
        printPane.setLayout(printPaneLayout);
        printPaneLayout.setHorizontalGroup(
            printPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, printPaneLayout.createSequentialGroup()
                .addGroup(printPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(printPaneLayout.createSequentialGroup()
                        .addContainerGap(308, Short.MAX_VALUE)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(printPaneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(302, 302, 302))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, printPaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(275, 275, 275))
        );
        printPaneLayout.setVerticalGroup(
            printPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(printPaneLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(295, Short.MAX_VALUE))
        );

        sidePanel.add(printPane);
        printPane.setBounds(10, 60, 860, 660);

        jTable2.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Transaction Id", "Item Id", "Quantity", "Date", "Revenue"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(20);
        }

        jPanel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel14.setPreferredSize(new java.awt.Dimension(242, 77));
        jPanel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel14MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel14MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel14MouseExited(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel34.setText("PRINT TRANSACTIONS");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel34)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout transactionTableLayout = new javax.swing.GroupLayout(transactionTable);
        transactionTable.setLayout(transactionTableLayout);
        transactionTableLayout.setHorizontalGroup(
            transactionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
            .addGroup(transactionTableLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        transactionTableLayout.setVerticalGroup(
            transactionTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionTableLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        sidePanel.add(transactionTable);
        transactionTable.setBounds(10, 60, 860, 660);

        jLabel21.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel21.setText("Quantity:");

        quantitySoldChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantitySoldChangeActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel22.setText("Threshold:");

        jScrollPane3.setViewportView(vendorsChange);

        jLabel23.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel23.setText("Selling Cost:");

        jLabel24.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel24.setText("Quantity Sold:");

        changeItemButton.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        changeItemButton.setText("Change Item");
        changeItemButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        changeItemButton.setContentAreaFilled(false);
        changeItemButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        changeItemButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        changeItemButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changeItemButtonMouseClicked(evt);
            }
        });

        addItemError23.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addItemError23.setForeground(new java.awt.Color(255, 51, 51));
        addItemError23.setText("This MUST be an integer");

        jLabel25.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel25.setText("Buying Cost:");

        addItemError24.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addItemError24.setForeground(new java.awt.Color(255, 51, 51));
        addItemError24.setText("This MUST be an integer");

        jLabel26.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel26.setText("Vendors:");

        jLabel27.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel27.setText("CHANGE ITEM IN INVENTORY");

        thresholdChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdChangeActionPerformed(evt);
            }
        });

        addItemError25.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addItemError25.setForeground(new java.awt.Color(255, 51, 51));
        addItemError25.setText("This MUST be an integer");

        addItemError26.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addItemError26.setForeground(new java.awt.Color(255, 51, 51));
        addItemError26.setText("This MUST be an integer");

        quantityChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityChangeActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel28.setText("Item Name:");

        sellingCostChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellingCostChangeActionPerformed(evt);
            }
        });

        addItemError22.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addItemError22.setForeground(new java.awt.Color(255, 51, 51));
        addItemError22.setText("This MUST be an integer");

        jLabel29.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel29.setText("ITEM CHANGED");

        itemNameChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNameChangeActionPerformed(evt);
            }
        });

        buyingCostChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyingCostChangeActionPerformed(evt);
            }
        });

        itemId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemIdActionPerformed(evt);
            }
        });
        itemId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemIdKeyPressed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel30.setText("Item Id:");

        addItemError21.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addItemError21.setForeground(new java.awt.Color(255, 51, 51));
        addItemError21.setText("Invalid NUMBER");

        javax.swing.GroupLayout changeItemFormLayout = new javax.swing.GroupLayout(changeItemForm);
        changeItemForm.setLayout(changeItemFormLayout);
        changeItemFormLayout.setHorizontalGroup(
            changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changeItemFormLayout.createSequentialGroup()
                .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(changeItemFormLayout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(quantityChange, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addItemError22))
                    .addGroup(changeItemFormLayout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addComponent(thresholdChange, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addItemError23))
                    .addGroup(changeItemFormLayout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel23)
                        .addGap(19, 19, 19)
                        .addComponent(sellingCostChange, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addItemError24))
                    .addGroup(changeItemFormLayout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(jLabel25)
                        .addGap(18, 18, 18)
                        .addComponent(buyingCostChange, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addItemError25))
                    .addGroup(changeItemFormLayout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(quantitySoldChange, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addItemError26))
                    .addGroup(changeItemFormLayout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addComponent(changeItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(changeItemFormLayout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jLabel26)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(changeItemFormLayout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(jLabel29))
                    .addGroup(changeItemFormLayout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel28))
                        .addGap(18, 18, 18)
                        .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(changeItemFormLayout.createSequentialGroup()
                                .addComponent(itemId, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addItemError21))
                            .addComponent(itemNameChange, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changeItemFormLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel27)
                .addGap(291, 291, 291))
        );
        changeItemFormLayout.setVerticalGroup(
            changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changeItemFormLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addGap(38, 38, 38)
                .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30)
                    .addComponent(addItemError21))
                .addGap(28, 28, 28)
                .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemNameChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addGap(28, 28, 28)
                .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addItemError22)
                    .addComponent(jLabel21))
                .addGap(28, 28, 28)
                .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(thresholdChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addItemError23)
                    .addComponent(jLabel22))
                .addGap(28, 28, 28)
                .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sellingCostChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addItemError24)))
                .addGap(28, 28, 28)
                .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyingCostChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addItemError25)
                    .addComponent(jLabel25))
                .addGap(28, 28, 28)
                .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantitySoldChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addItemError26)
                    .addComponent(jLabel24))
                .addGap(28, 28, 28)
                .addGroup(changeItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(changeItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel29)
                .addContainerGap())
        );

        sidePanel.add(changeItemForm);
        changeItemForm.setBounds(10, 60, 860, 660);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel3.setText("Item Name:");

        itemNameNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNameNewActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel11.setText("Quantity:");

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel12.setText("Threshold:");

        jLabel15.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel15.setText("Selling Cost:");

        jLabel16.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel16.setText("Quantity Sold:");

        jLabel17.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel17.setText("Buying Cost:");

        jLabel18.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel18.setText("Vendors:");

        jLabel19.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel19.setText("ADD ITEM TO INVENTORY");

        thresholdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdNewActionPerformed(evt);
            }
        });

        quantityNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityNewActionPerformed(evt);
            }
        });

        sellingCostNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellingCostNewActionPerformed(evt);
            }
        });

        buyingCostNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyingCostNewActionPerformed(evt);
            }
        });

        quantitySoldNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantitySoldNewActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(vendorsNew);

        addItemButton.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        addItemButton.setText("Add Item");
        addItemButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        addItemButton.setContentAreaFilled(false);
        addItemButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addItemButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        addItemButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addItemButtonMouseClicked(evt);
            }
        });

        addItemError1.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addItemError1.setForeground(new java.awt.Color(255, 51, 51));
        addItemError1.setText("This MUST be an integer");

        addItemError2.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addItemError2.setForeground(new java.awt.Color(255, 51, 51));
        addItemError2.setText("This MUST be an integer");

        addItemError3.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addItemError3.setForeground(new java.awt.Color(255, 51, 51));
        addItemError3.setText("This MUST be an integer");

        addItemError4.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addItemError4.setForeground(new java.awt.Color(255, 51, 51));
        addItemError4.setText("This MUST be an integer");

        addItemError5.setFont(new java.awt.Font("Century Gothic", 1, 15)); // NOI18N
        addItemError5.setForeground(new java.awt.Color(255, 51, 51));
        addItemError5.setText("This MUST be an integer");

        jLabel20.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel20.setText("NEW ITEM ADDED");

        javax.swing.GroupLayout newItemFormLayout = new javax.swing.GroupLayout(newItemForm);
        newItemForm.setLayout(newItemFormLayout);
        newItemFormLayout.setHorizontalGroup(
            newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newItemFormLayout.createSequentialGroup()
                .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newItemFormLayout.createSequentialGroup()
                        .addGap(312, 312, 312)
                        .addComponent(jLabel19))
                    .addGroup(newItemFormLayout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel11)
                        .addGap(15, 15, 15)
                        .addComponent(quantityNew, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addItemError1))
                    .addGroup(newItemFormLayout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel12)
                        .addGap(13, 13, 13)
                        .addComponent(thresholdNew, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addItemError2))
                    .addGroup(newItemFormLayout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel15)
                        .addGap(19, 19, 19)
                        .addComponent(sellingCostNew, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addItemError3))
                    .addGroup(newItemFormLayout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel17)
                        .addGap(16, 16, 16)
                        .addComponent(buyingCostNew, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addItemError4))
                    .addGroup(newItemFormLayout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jLabel16)
                        .addGap(12, 12, 12)
                        .addComponent(quantitySoldNew, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addItemError5))
                    .addGroup(newItemFormLayout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newItemFormLayout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel3)
                        .addGap(20, 20, 20)
                        .addComponent(itemNameNew, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newItemFormLayout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jLabel18)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newItemFormLayout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(jLabel20)))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        newItemFormLayout.setVerticalGroup(
            newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newItemFormLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel19)
                .addGap(38, 38, 38)
                .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(itemNameNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(quantityNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addItemError1)))
                .addGap(28, 28, 28)
                .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(thresholdNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addItemError2)))
                .addGap(28, 28, 28)
                .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sellingCostNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addItemError3)))
                .addGap(28, 28, 28)
                .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buyingCostNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addItemError4)))
                .addGap(28, 28, 28)
                .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(quantitySoldNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addItemError5)))
                .addGap(28, 28, 28)
                .addGroup(newItemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addContainerGap())
        );

        sidePanel.add(newItemForm);
        newItemForm.setBounds(10, 60, 860, 660);

        sidePanelTitle.setBackground(new java.awt.Color(204, 204, 204));
        sidePanelTitle.setFont(new java.awt.Font("Century Gothic", 1, 30)); // NOI18N
        sidePanelTitle.setForeground(new java.awt.Color(36, 47, 65));
        sidePanelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sidePanelTitle.setText("INVENTORY");
        sidePanelTitle.setMaximumSize(new java.awt.Dimension(500, 38));
        sidePanelTitle.setPreferredSize(new java.awt.Dimension(500, 38));
        sidePanel.add(sidePanelTitle);
        sidePanelTitle.setBounds(180, 20, 500, 38);

        getContentPane().add(sidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 0, 880, 730));

        pack();
    }// </editor-fold>//GEN-END:initComponents

	public void setThresholdvalues(){
		
		Calendar cal = new GregorianCalendar(2018, 2, 12);
		Date dateOfStartingSoftware = cal.getTime();
		Date now = (Calendar.getInstance()).getTime();
		
		
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
		String dateOfStart = formatter.format(dateOfStartingSoftware);
		String dateToday = formatter.format(now);
		
		long duration  = now.getTime() - dateOfStartingSoftware.getTime();
		long diffIndays = TimeUnit.MILLISECONDS.toDays(duration);
		
		
		//int totalNumberOfItems = 0;
		
		Connection con = null;
		ResultSet rs = null;
		PreparedStatement ps = null;
		
		
		try{
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpss", "root" ,"saikrishna");
			ps = con.prepareStatement("select * from inventory");
			rs = ps.executeQuery();

			try {
				while ( rs.next() ){
					int quantitySoldTillDate = Integer.valueOf(rs.getString("quantitySold"));
					double threshold = (((double) quantitySoldTillDate)/diffIndays)*7;
					
					if ((threshold == Math.floor(threshold)) && !Double.isInfinite(threshold))
						threshold = (int) threshold;
					else
						threshold = Math.ceil(threshold);
					
					try {
						Class.forName("com.mysql.jdbc.Driver").newInstance();
						con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/MPSS", "root" ,"saikrishna");
						String sql = "UPDATE inventory SET threshold = ? WHERE itemId = ?";
						PreparedStatement pst = con.prepareStatement(sql);

						pst.setString(1, Double.toString(threshold));
						pst.setString(2, rs.getString("itemId"));
						
						pst.execute();
					} catch (Exception e) {
						System.out.println(e);
					}
				}
			} catch (SQLException e){
				System.out.println(e);
			}           

		} catch (SQLException e){
			System.out.println(e);
		}
		
	}
	
	public void setupjTable4(){
		jTable4.addMouseListener(new java.awt.event.MouseAdapter(){
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e){
				int row= jTable4.rowAtPoint(e.getPoint());
				int col= jTable4.columnAtPoint(e.getPoint());

				if (e.getClickCount() >0){
						if(col == 0 && ((boolean) jTable4.getValueAt(row, 0))){
							DefaultTableModel model2 = (DefaultTableModel)jTable3.getModel();

							Connection con = null;
							ResultSet rs = null;
							PreparedStatement ps = null;
							
							try{
								con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpss", "root" ,"saikrishna");
								ps = con.prepareStatement("select * from inventory WHERE itemId = ?");
								
								ps.setString(1, (String) jTable4.getValueAt(row, 1));
								
								rs = ps.executeQuery();

								try {
									while ( rs.next() ){

										String[] row2 = new String[2];
										row2[0] = rs.getString("itemId");
										row2[1] = rs.getString("itemName");
										
										model2.addRow(row2);
									}


								} catch (SQLException e1){
									System.out.println(e1);
								}           

							} catch (SQLException e1){
								System.out.println(e1);
							}
							setCellsAlignment(jTable3, SwingConstants.CENTER);
						}
					}
				}	
			
			});
	}
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void InventoryOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InventoryOMouseClicked
        // TODO add your handling code here:
        
		centerjLabel3("INVENTORY");

		setAllOptionsOpaque();
		
		InventoryO.setOpaque(false);
		InventoryO.repaint();
		
		focusPanel(0, 0);
        
    }//GEN-LAST:event_InventoryOMouseClicked

    private void TransactionOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TransactionOMouseClicked
        // TODO add your handling code here:
        
		centerjLabel3("TRANSACTIONS");
		
		setAllOptionsOpaque();
		
		TransactionO.setOpaque(false);
		TransactionO.repaint();
		
		focusPanel(1, 0);
		
		fillTransactionTable1(jTable2);
        
    }//GEN-LAST:event_TransactionOMouseClicked

    private void RevenueOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenueOMouseClicked
        // TODO add your handling code here:
        
		centerjLabel3("REVENUE");
		
		setAllOptionsOpaque();
		
		RevenueO.setOpaque(false);
		RevenueO.repaint();
		
		focusPanel(2, 0);
		
		int totalrevenueToday = 0;
		int totalrevenueMonth = 0;
		int sellrevenueToday = 0;
		int sellrevenueMonth = 0;
		int buyrevenueToday = 0;
		int buyrevenueMonth = 0;
		int totalProfitToday = 0;
		int totalProfitMonth = 0;
		int transactionRevenue;
		Date now = new Date();
		String pattern = "yyyy-MM-dd";
		SimpleDateFormat formatter = new SimpleDateFormat(pattern);
		String mysqlDateString = formatter.format(now);
		
		Connection con = null;
		ResultSet rs = null;
		PreparedStatement ps = null;
		
		try{
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpss", "root" ,"saikrishna");
			ps = con.prepareStatement("select * from transactions WHERE date = ?");
			ps.setString(1, mysqlDateString);
			rs = ps.executeQuery();

			try {
				while ( rs.next() ){
					
					transactionRevenue = Integer.valueOf(rs.getString("revenue"));
					
					if(transactionRevenue < 0){
						totalrevenueToday-= transactionRevenue;
						buyrevenueToday-=transactionRevenue;
					}else{
						totalrevenueToday+= transactionRevenue;
						sellrevenueToday+=transactionRevenue;
					}
					totalProfitToday+= transactionRevenue;
				}
			} catch (SQLException e){
				System.out.println(e);
			}
		} catch (SQLException e){
			System.out.println(e);
		}
		
		totalRevenueTodayLabel.setText(Integer.toString(totalrevenueToday));
		sellRevenueTodayLabel.setText(Integer.toString(sellrevenueToday));
		buyRevenueTodayLabel.setText(Integer.toString(buyrevenueToday));
		totalProfitTodayLabel.setText(Integer.toString(totalProfitToday));
		
		
		
		
		for(int i = 30; i >= 0; i--){
			Calendar cal = Calendar.getInstance();
			cal.add(Calendar.DATE, -i);
			Date nDaysBack = cal.getTime();
			String mysqlDateStringNDaysBack = formatter.format(nDaysBack);

			try{
				con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpss", "root" ,"saikrishna");
				ps = con.prepareStatement("select * from transactions WHERE date = ?");
				ps.setString(1, mysqlDateStringNDaysBack);
				rs = ps.executeQuery();

				try {
					while ( rs.next() ){
						transactionRevenue = Integer.valueOf(rs.getString("revenue"));

						if(transactionRevenue < 0){
							totalrevenueMonth-= transactionRevenue;
							buyrevenueMonth-=transactionRevenue;
						}else{
							totalrevenueMonth+= transactionRevenue;
							sellrevenueMonth+=transactionRevenue;
						}
						totalProfitMonth+= transactionRevenue;
					}
				} catch (SQLException e){
					System.out.println(e);
				}
			} catch (SQLException e){
				System.out.println(e);
			}
		}
		
		
		totalRevenueMonthLabel.setText(Integer.toString(totalrevenueMonth));
		sellRevenueMonthLabel.setText(Integer.toString(sellrevenueMonth));
		buyRevenueMonthLabel.setText(Integer.toString(buyrevenueMonth));
		totalProfitMonthLabel.setText(Integer.toString(totalProfitMonth));
    }//GEN-LAST:event_RevenueOMouseClicked

    private void PrintOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintOMouseClicked
        // TODO add your handling code here:
        
		centerjLabel3("PRINT");

		setAllOptionsOpaque();
		
		PrintO.setOpaque(false);
		PrintO.repaint();
			
		focusPanel(3, 0);
    }//GEN-LAST:event_PrintOMouseClicked

    private void NewTransactionOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewTransactionOMouseClicked
        // TODO add your handling code here:
        
		centerjLabel3("NEW TRANSACTION");
		
		setAllOptionsOpaque();
		
		NewTransactionO.setOpaque(false);
		NewTransactionO.repaint();
		
		focusPanel(4, 0);
		fillJtable4();

		CheckBoxRenderer checkBoxRenderer = new CheckBoxRenderer();
		jTable4.getColumnModel().getColumn(0).setCellRenderer(checkBoxRenderer);
		
		((DefaultTableModel)jTable3.getModel()).setRowCount(0);
		
		jTable3.addMouseListener(new java.awt.event.MouseAdapter(){
			@Override
			public void mouseClicked(java.awt.event.MouseEvent e){
				int row= jTable3.rowAtPoint(e.getPoint());
				int col= jTable3.columnAtPoint(e.getPoint());
				
				if(col == 2){
					jTable3.editCellAt(row, col);
				}
			}
		});
    }//GEN-LAST:event_NewTransactionOMouseClicked

	public void setAllOptionsOpaque(){
		InventoryO.setOpaque(true);
		InventoryO.repaint();
		TransactionO.setOpaque(true);
		TransactionO.repaint();
		RevenueO.setOpaque(true);
		RevenueO.repaint();
		PrintO.setOpaque(true);
		PrintO.repaint();
		NewTransactionO.setOpaque(true);
		NewTransactionO.repaint();
        
		resetAllForms();
	}
	
    private void jPanel9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseExited
        // TODO add your handling code here:

        jPanel9.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel9MouseExited

    private void jPanel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseEntered
        // TODO add your handling code here:

        jPanel9.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel9MouseEntered

    private void jPanel8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseExited
        // TODO add your handling code here:

        jPanel8.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel8MouseExited

    private void jPanel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseEntered
        // TODO add your handling code here:

        jPanel8.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel8MouseEntered

    private void jPanel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseClicked
        // TODO add your handling code here:

		focusPanel(0, 3);
		
		addItemError21.setVisible(false);
		addItemError22.setVisible(false);
		addItemError23.setVisible(false);
		addItemError24.setVisible(false);
		addItemError25.setVisible(false);
		addItemError26.setVisible(false);
		
		jLabel29.setVisible(false);
        
    }//GEN-LAST:event_jPanel9MouseClicked

    private void jPanel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseClicked
        // TODO add your handling code here:
	focusPanel(0, 2);
	
	searchField.setForeground(new Color(204,204,204));
	searchField.setText("Item Id or Item Name");
	filljTable1("select * from inventory");
	
    }//GEN-LAST:event_jPanel10MouseClicked

    private void jPanel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseEntered
        // TODO add your handling code here:
        jPanel10.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel10MouseEntered

    private void jPanel10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseExited
        // TODO add your handling code here:
        jPanel10.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel10MouseExited

    private void itemNameNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNameNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNameNewActionPerformed

    private void thresholdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholdNewActionPerformed

    private void quantityNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityNewActionPerformed

    private void sellingCostNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellingCostNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sellingCostNewActionPerformed

    private void buyingCostNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyingCostNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buyingCostNewActionPerformed

    private void quantitySoldNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantitySoldNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantitySoldNewActionPerformed

    private void addItemButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addItemButtonMouseClicked
		// TODO add your handling code here:
        
		if(checkValuesForAdding()){

			Connection conn = null;
			try {
				Class.forName("com.mysql.jdbc.Driver").newInstance();
				conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/MPSS", "root" ,"saikrishna");
				String sql = "INSERT INTO inventory(itemId, itemName, quantity, threshold, sellingCost, buyingCost, quantitySold, vendors) VALUES (?,?,?,?,?,?,?,?)";
				PreparedStatement pst = conn.prepareStatement(sql);


				String itemIdNew = Integer.toString(getNewItemId());


				pst.setString(1,itemIdNew);
				pst.setString(2,itemNameNew.getText());
				pst.setString(3,quantityNew.getText());
				pst.setString(4,thresholdNew.getText());
				pst.setString(5,sellingCostNew.getText());
				pst.setString(6,buyingCostNew.getText());
				pst.setString(7,quantitySoldNew.getText());
				pst.setString(8,vendorsNew.getText());
				pst.execute();

				jLabel20.setVisible(true);
				
				itemNameNew.setText(null);
				quantityNew.setText(null);
				thresholdNew.setText(null);
				sellingCostNew.setText(null);
				buyingCostNew.setText(null);
				quantitySoldNew.setText(null);
				vendorsNew.setText(null);
				
				addItemError1.setVisible(false);
				addItemError2.setVisible(false);
				addItemError3.setVisible(false);
				addItemError4.setVisible(false);
				addItemError5.setVisible(false);

			} catch (Exception e){
				System.out.println(e);
			}
		}
        
    }//GEN-LAST:event_addItemButtonMouseClicked

    private void jPanel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseClicked
        // TODO add your handling code here:
		focusPanel(0, 1);
		
		addItemError1.setVisible(false);
		addItemError2.setVisible(false);
		addItemError3.setVisible(false);
		addItemError4.setVisible(false);
		addItemError5.setVisible(false);
		
		jLabel20.setVisible(false);
		
    }//GEN-LAST:event_jPanel8MouseClicked

    private void quantitySoldChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantitySoldChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantitySoldChangeActionPerformed

    private void changeItemButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changeItemButtonMouseClicked
        // TODO add your handling code here:
		
		if(checkValuesForChanging()){

			Connection conn = null;
			try {
				Class.forName("com.mysql.jdbc.Driver").newInstance();
				conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/MPSS", "root" ,"saikrishna");
				String sql = "UPDATE inventory SET itemName = ?, quantity = ?, threshold = ?, sellingCost = ?, buyingCost = ?, quantitySold = ?, vendors = ? WHERE itemId = ?";
				PreparedStatement pst = conn.prepareStatement(sql);
				
				
				pst.setString(1,itemNameChange.getText());
				pst.setString(2,quantityChange.getText());
				pst.setString(3,thresholdChange.getText());
				pst.setString(4,sellingCostChange.getText());
				pst.setString(5,buyingCostChange.getText());
				pst.setString(6,quantitySoldChange.getText());
				pst.setString(7,vendorsChange.getText());
				pst.setString(8,itemId.getText());
				pst.execute();

				jLabel29.setVisible(true);
				
				itemId.setText("");
				itemNameChange.setText("");
				quantityChange.setText("");
				thresholdChange.setText("");
				sellingCostChange.setText("");
				buyingCostChange.setText("");
				quantitySoldChange.setText("");
				vendorsChange.setText("");
				
				addItemError22.setVisible(false);
				addItemError23.setVisible(false);
				addItemError24.setVisible(false);
				addItemError25.setVisible(false);
				addItemError26.setVisible(false);

			} catch (Exception e){
				System.out.println(e);
			}
		}
		
    }//GEN-LAST:event_changeItemButtonMouseClicked

	public void resetNewItemForm(){
		itemNameNew.setText("");
		quantityNew.setText("");
		thresholdNew.setText("");
		sellingCostNew.setText("");
		buyingCostNew.setText("");
		quantitySoldNew.setText("");
		vendorsNew.setText("");
	}
	
	public Boolean checkValuesForChanging(){
		Boolean allTrue = true;
		if(checkInt(quantityChange.getText())){
			allTrue &= true;
		}else{
			allTrue &= false;
			addItemError22.setVisible(true);
		}
		
		if(checkInt(thresholdChange.getText())){
			allTrue &= true;
		}else{
			allTrue &= false;
			addItemError23.setVisible(true);
		}
		
		if(checkInt(sellingCostChange.getText())){
			allTrue &= true;
		}else{
			allTrue &= false;
			addItemError24.setVisible(true);
		}
		
		if(checkInt(buyingCostChange.getText())){
			allTrue &= true;
		}else{
			allTrue &= false;
			addItemError25.setVisible(true);
		}
		
		if(checkInt(quantitySoldChange.getText())){
			allTrue &= true;
		}else{
			allTrue &= false;
			addItemError26.setVisible(true);
		}
		
		return allTrue;
	}
	
    private void thresholdChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholdChangeActionPerformed

    private void quantityChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityChangeActionPerformed

    private void sellingCostChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellingCostChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sellingCostChangeActionPerformed

    private void itemNameChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNameChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNameChangeActionPerformed

    private void buyingCostChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyingCostChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buyingCostChangeActionPerformed

    private void itemIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemIdActionPerformed

    private void itemIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemIdKeyPressed
			try {
				// TODO add your handling code here:
				
				int givenId = Integer.valueOf(itemId.getText()+((char) evt.getKeyCode()));
				int maxValue = getNewItemId();
				
				if(givenId >0 && givenId < maxValue){
					addItemError21.setVisible(false);
					
					Connection conn = null;

					try{
						conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpss", "root" ,"saikrishna");
						ResultSet rs = null;
						PreparedStatement ps = null;
						
						ps = conn.prepareStatement("select * from inventory where itemId = ?");
						ps.setString(1, Integer.toString(givenId));
						rs = ps.executeQuery();
						
						
						while(rs.next()){
							
							itemNameChange.setText(rs.getString("itemName"));
							quantityChange.setText(rs.getString("quantity"));
							thresholdChange.setText(rs.getString("threshold"));
							sellingCostChange.setText(rs.getString("sellingCost"));
							buyingCostChange.setText(rs.getString("buyingCost"));
							quantitySoldChange.setText(rs.getString("quantitySold"));
							vendorsChange.setText(rs.getString("vendors"));
						}
						
					}catch ( Exception e ){
						System.out.println(e);
					}


				}else{
					addItemError21.setVisible(true);
					resetChangeForm();
				}
			}catch(Exception e){
				addItemError21.setVisible(true);
				 System.out.println(e);
			}
    }//GEN-LAST:event_itemIdKeyPressed

    private void jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseClicked
        // TODO add your handling code here:
		
		jPanel10MouseClicked(evt);
		
		try {
			printTable(jTable1, "SHOP INVENTORY");
		} catch (PrinterException ex) {
			Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_jPanel11MouseClicked

    private void jPanel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseEntered
        // TODO add your handling code here:
		jPanel11.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel11MouseEntered

    private void jPanel11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseExited
        // TODO add your handling code here:
		jPanel11.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel11MouseExited

    private void jPanel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel12MouseClicked
        // TODO add your handling code here:
		
		focusPanel(1, 0);
		
		fillTransactionTable1(jTable2);
		
		try {
			printTable(jTable2, "SHOP TRANSACTIONS");
		} catch (PrinterException ex) {
			Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_jPanel12MouseClicked

    private void jPanel12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel12MouseEntered
        // TODO add your handling code here:
		jPanel12.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel12MouseEntered

    private void jPanel12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel12MouseExited
        // TODO add your handling code here:
		jPanel12.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel12MouseExited

    private void jPanel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel14MouseClicked
        // TODO add your handling code here:
		jPanel12MouseClicked(evt);
    }//GEN-LAST:event_jPanel14MouseClicked

    private void jPanel14MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel14MouseEntered
        // TODO add your handling code here:
		jPanel14.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel14MouseEntered

    private void jPanel14MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel14MouseExited
        // TODO add your handling code here:
		jPanel14.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel14MouseExited

    private void jPanel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel15MouseClicked
        // TODO add your handling code here:
		jPanel11MouseClicked(evt);
    }//GEN-LAST:event_jPanel15MouseClicked

    private void jPanel15MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel15MouseEntered
        // TODO add your handling code here:
		jPanel15.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel15MouseEntered

    private void jPanel15MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel15MouseExited
        // TODO add your handling code here:
		jPanel15.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel15MouseExited

	public int getNewtransactionId() throws SQLException{
		Connection connect = null;
		Statement statement = null;
		ResultSet resultSet = null;
		int totalNumberOfItems = 1;
		try {

			connect = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/mpss", "root" ,"saikrishna");
			statement = connect.createStatement();

			resultSet = statement.executeQuery("select count(*) from transactions");


		} catch (SQLException ex) {
			Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
		}
		while(resultSet.next()){
			totalNumberOfItems = resultSet.getInt(1)+1;
		}
		return totalNumberOfItems;
	}
	
    private void jPanel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel18MouseClicked
        // TODO add your handling code here:
		
		DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
		
		String itemIdSet = "";
		String quantitySoldSet = "";
		int transactionRevenue = 0;
		
		
		for(int i = 0; i < model.getRowCount(); i++){
			Connection con = null;
			ResultSet itemResultSet = null;
			PreparedStatement ps = null;
			
			try{
				con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpss", "root" ,"saikrishna");
				ps = con.prepareStatement("select * from inventory WHERE itemId = ?");
				
				String s = "";
				try{
					s = Integer.toString((int) model.getValueAt(i, 0));
				}catch(Exception e){
					s = (String) model.getValueAt(i, 0);
				}
				
				ps.setString(1, s);
				
				itemResultSet = ps.executeQuery();
				
				
				if(itemResultSet.next()){
					int quantity = Integer.valueOf(itemResultSet.getString("quantity"));
					
					try{
						s = Integer.toString((int) model.getValueAt(i, 2));
					}catch(Exception e){
						s = (String) model.getValueAt(i, 2);
					}
					
					int quantitySold = Integer.valueOf(s);
					int quantitySoldtillDate = Integer.valueOf(itemResultSet.getString("quantitySold"));
					int itemRevenue = quantitySold*(Integer.valueOf(itemResultSet.getString("sellingCost")));
					
					itemIdSet+= ", "+itemResultSet.getString("itemId");
					quantitySoldSet+= ", "+Integer.toString(quantitySold);
					
					transactionRevenue+= itemRevenue;
					
					Connection conn = null;
					try {
						Class.forName("com.mysql.jdbc.Driver").newInstance();
						conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/MPSS", "root" ,"saikrishna");
						String sql = "UPDATE inventory SET quantity = ?, quantitySold = ? WHERE itemId = ?";
						PreparedStatement pst = conn.prepareStatement(sql);

						pst.setString(1, Integer.toString(quantity-quantitySold));
						if(quantitySold < 0)
							pst.setString(2, Integer.toString(quantitySoldtillDate));
						else
							pst.setString(2, Integer.toString(quantitySold+quantitySoldtillDate));
						
						try{
						s = Integer.toString((int) model.getValueAt(i, 0));
						}catch(Exception e){
							s = (String) model.getValueAt(i, 0);
						}
						
						pst.setString(3, Integer.toString(Integer.valueOf(s)));
						
						pst.execute();

					}catch(Exception e){
						System.out.println(e);
					}
				}
				
			}catch(Exception e){
				System.out.println(e);
			}
		}
		
		Connection conn = null;
		try {
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/MPSS", "root" ,"saikrishna");
			String sql = "INSERT INTO transactions(transactionId, itemId, quantity, date, revenue) VALUES (?,?,?,?,?)";
			PreparedStatement pst = conn.prepareStatement(sql);

			String transactionId = Integer.toString(getNewtransactionId());

			Date now = new Date();
			String pattern = "yyyy-MM-dd";
			SimpleDateFormat formatter = new SimpleDateFormat(pattern);
			String mysqlDateString = formatter.format(now);


			pst.setString(1,transactionId);
			pst.setString(2, itemIdSet.substring(2));
			pst.setString(3, quantitySoldSet.substring(2));
			pst.setString(4, mysqlDateString);
			pst.setString(5, Integer.toString(transactionRevenue));

			pst.execute();
		}catch(Exception e){
			System.out.println(e);
		}
		
		SimpleDateFormat normalformatter = new SimpleDateFormat("dd-MM-yyyy");
		Date now = new Date();
		
		try{
			printTable(jTable3, "Transaction Date:"+normalformatter.format(now));
		}catch(Exception e){
			System.out.println(e);
		}
    }//GEN-LAST:event_jPanel18MouseClicked

	public int calculateTransactionRevenue(){
		DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
		
		int revenue = 0;
		
		for(int i = 0; i < model.getRowCount(); i++){
			
		}
		
		return revenue;
	}
	
    private void jPanel18MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel18MouseEntered
        // TODO add your handling code here:
		jPanel18.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel18MouseEntered

    private void jPanel18MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel18MouseExited
        // TODO add your handling code here:
		jPanel18.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel18MouseExited

    private void jPanel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel20MouseClicked
        // TODO add your handling code here:
		((DefaultTableModel)jTable3.getModel()).setRowCount(0);
		
		DefaultTableModel model = (DefaultTableModel)jTable4.getModel();
		
		for(int i = 0; i < model.getRowCount(); i++){
			model.setValueAt(false, i, 0);
		}
		fillJtable4();
		CheckBoxRenderer checkBoxRenderer = new CheckBoxRenderer();
		jTable4.getColumnModel().getColumn(0).setCellRenderer(checkBoxRenderer);
		
    }//GEN-LAST:event_jPanel20MouseClicked

    private void jPanel20MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel20MouseEntered
        // TODO add your handling code here:
		jPanel20.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel20MouseEntered

    private void jPanel20MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel20MouseExited
        // TODO add your handling code here:
		jPanel20.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel20MouseExited

    private void jPanel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel13MouseClicked
        // TODO add your handling code here:
		
		JFrame barChartFrame = new JFrame();
		JFXPanel fxPanel = new JFXPanel();
		barChartFrame.add(fxPanel);
		
		Date now = new Date();
		String pattern = "yyyy-MM-dd";
		SimpleDateFormat formatter = new SimpleDateFormat(pattern);
		String mysqlDateString = formatter.format(now);
		
		Calendar cal = Calendar.getInstance();
		cal.add(Calendar.MONTH, -1);
		Date monthBack = cal.getTime();
		String mysqlDateStringMonthBack = formatter.format(monthBack);
		
		List<String> dates = new ArrayList<String>();
		for(int i = 30; i >= 0; i--){
			cal = Calendar.getInstance();
			cal.add(Calendar.DATE, -i);
			Date nDaysBack = cal.getTime();
			dates.add(formatter.format(nDaysBack));
		}
		
		//Defining the axes              
		CategoryAxis xAxis = new CategoryAxis();  
		xAxis.setCategories(FXCollections.<String>observableArrayList(dates));
		xAxis.setLabel("date");

		NumberAxis yAxis = new NumberAxis();
		yAxis.setLabel("sales");

		//Creating the Bar chart
		BarChart<String, Number> barChart = new BarChart<>(xAxis, yAxis); 
		barChart.setTitle("SALES");

		//Prepare XYChart.Series objects by setting data       
		XYChart.Series<String, Number> sales = new XYChart.Series<>();
		sales.setName("Sales by Day");
		for(int i = 30; i >= 0; i--){
			Connection con = null;
			ResultSet rs = null;
			PreparedStatement ps = null;
			
			Calendar cal2 = Calendar.getInstance();
			cal2.add(Calendar.DATE, -i);
			Date nDaysBack = cal2.getTime();
			String mysqlDateStringNDaysBack = formatter.format(nDaysBack);
			int salesNDay = 0;
			try{
				
				
				con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpss", "root" ,"saikrishna");
				ps = con.prepareStatement("select * from transactions WHERE date  = ?");
				ps.setString(1, mysqlDateStringNDaysBack);
				rs = ps.executeQuery();

				try {
					if(rs != null){
						while( rs.next() ){
							
							salesNDay += getSumOf(rs.getString("quantity"));
						}
					}
				} catch (SQLException e){
					System.out.println(e);
				}
			} catch (SQLException e){
				System.out.println(e);
			}
			
			
			sales.getData().add(new XYChart.Data<>(mysqlDateStringNDaysBack, salesNDay));
			
		}

		//Setting the data to bar chart       
		barChart.getData().addAll(sales);
		barChart.setMinSize(1500, 1000);

		//Creating a Group object 
		Group root = new Group(barChart);
		//Creating a scene object
		Scene scene = new Scene(root, 1500, 1000);
		fxPanel.setScene(scene);
		fxPanel.setMinimumSize(new Dimension(1500, 1000));
		fxPanel.setPreferredSize(new Dimension(1500, 1000));
		
		fxPanel.setVisible(true);
		
		barChartFrame.setResizable(false);
		barChartFrame.pack();
		barChartFrame.setLocationRelativeTo(null);
		barChartFrame.setVisible(true);
		barChartFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jPanel13MouseClicked

	public int getSumOf(String s){
		int sum = 0;
		String[] a = s.split(",\\s+");
		for(int i = 0; i< a.length; i++){
			sum+= Integer.valueOf(a[i]);
		}
		if(sum < 0)
			return 0;
		else
			return sum;
	}
	
    private void jPanel13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel13MouseEntered
        // TODO add your handling code here:
		jPanel13.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel13MouseEntered

    private void jPanel13MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel13MouseExited
        // TODO add your handling code here:
		jPanel13.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel13MouseExited

    private void jPanel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel17MouseClicked
        // TODO add your handling code here:
		setThresholdvalues();
		
		focusPanel(3, 2);
		
		DefaultTableModel model = (DefaultTableModel)thresholdTable.getModel();
		model.setRowCount(0);
		
		Connection con = null;
		ResultSet rs = null;
		PreparedStatement ps = null;
		
		
		try{
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpss", "root" ,"saikrishna");
			ps = con.prepareStatement("select * from inventory");
			rs = ps.executeQuery();

			try {
				while ( rs.next() ){
					int quantity = Integer.valueOf(rs.getString("quantity"));
					int threshold = Integer.valueOf(rs.getString("threshold"));
					if(quantity < threshold){
						
						String[] row = new String[5];
						row[0] = rs.getString("itemId");
						row[1] = rs.getString("itemName");
						row[2] = Integer.toString(threshold-quantity);
						row[3] = Integer.toString((threshold-quantity)*Integer.valueOf(rs.getString("buyingCost")));
						row[4] = rs.getString("vendors");

						model.addRow(row);
					}
					
				}
			} catch (SQLException e){
				System.out.println(e);
			}           

		} catch (SQLException e){
			System.out.println(e);
		}
		
		setCellsAlignment(thresholdTable, SwingConstants.CENTER);
    }//GEN-LAST:event_jPanel17MouseClicked

    private void jPanel17MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel17MouseEntered
        // TODO add your handling code here:
		jPanel17.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel17MouseEntered

    private void jPanel17MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel17MouseExited
        // TODO add your handling code here:
		jPanel17.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel17MouseExited

    private void jPanel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel16MouseClicked
			 try {
				 // TODO add your handling code here:
				 printTable(thresholdTable, "ITEMS TO RESTOCK");
			 } catch (PrinterException ex) {
				 Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
			 }
    }//GEN-LAST:event_jPanel16MouseClicked

    private void jPanel16MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel16MouseEntered
        // TODO add your handling code here:
		jPanel16.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel16MouseEntered

    private void jPanel16MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel16MouseExited
        // TODO add your handling code here:
		jPanel16.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel16MouseExited

    private void jPanel21MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel21MouseExited
        // TODO add your handling code here:
		jPanel21.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel21MouseExited

    private void jPanel21MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel21MouseEntered
        // TODO add your handling code here:
		jPanel21.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel21MouseEntered

    private void jPanel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel21MouseClicked
        // TODO add your handling code here:
		searchField.requestFocus();
		searchField.setText("");
    }//GEN-LAST:event_jPanel21MouseClicked

    private void searchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyPressed
        // TODO add your handling code here:
		int keyPressed = evt.getKeyCode();
			if(keyPressed == java.awt.event.KeyEvent.VK_ENTER){
				
				String statement = "";
				if(checkInt(searchField.getText()))
					statement = "select * from inventory WHERE itemId = " + searchField.getText();
				else
					statement = "select * from inventory WHERE itemName LIKE \"%" + searchField.getText()+"%\"";
				
				filljTable1(statement);
			}
    }//GEN-LAST:event_searchFieldKeyPressed

    private void searchFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldMouseEntered
        // TODO add your handling code here:
		jPanel21.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_searchFieldMouseEntered

    private void searchFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldMouseExited
        // TODO add your handling code here:
		jPanel21.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_searchFieldMouseExited

    private void searchFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldMouseClicked
        // TODO add your handling code here:
		searchField.requestFocus();
		searchField.setText("");
		searchField.setForeground(Color.black);
    }//GEN-LAST:event_searchFieldMouseClicked

    private void jPanel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel22MouseClicked
        // TODO add your handling code here:
		jPanel10MouseClicked(evt);
    }//GEN-LAST:event_jPanel22MouseClicked

    private void jPanel22MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel22MouseEntered
        // TODO add your handling code here:
		jPanel22.setBorder(BorderFactory.createLineBorder(Color.black));
    }//GEN-LAST:event_jPanel22MouseEntered

    private void jPanel22MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel22MouseExited
        // TODO add your handling code here:
		jPanel22.setBorder(BorderFactory.createEmptyBorder());
    }//GEN-LAST:event_jPanel22MouseExited

	public void filljTable1(String statement){
		
		DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
		model.setRowCount(0);

		Connection con = null;
		ResultSet rs = null;
		PreparedStatement ps = null;


		try{
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpss", "root" ,"saikrishna");
			ps = con.prepareStatement(statement);
			rs = ps.executeQuery();

			try {
				while ( rs.next() ){

					String[] row2 = new String[8];
					row2[0] = rs.getString("itemId");
					row2[1] = rs.getString("itemName");
					row2[2] = rs.getString("quantity");
					row2[3] = rs.getString("threshold");
					row2[4] = rs.getString("sellingCost");
					row2[5] = rs.getString("buyingCost");
					row2[6] = rs.getString("quantitySold");
					row2[7] = rs.getString("vendors");

					model.addRow(row2);
				}


			} catch (SQLException e){
				System.out.println(e);
			}           

		} catch (SQLException e){
			System.out.println(e);
		}

		setCellsAlignment(jTable1, SwingConstants.CENTER);
	}
	
	public void fillJtable4(){
		DefaultTableModel model = (DefaultTableModel)jTable4.getModel();
		model.setRowCount(0);
		
		Connection con = null;
		ResultSet rs = null;
		PreparedStatement ps = null;
		try{
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpss", "root" ,"saikrishna");
			ps = con.prepareStatement("select * from inventory");
			rs = ps.executeQuery();

			try {
				while ( rs.next() ){

					String[] row2 = new String[9];
					row2[0] = "false";
					row2[1] = rs.getString("itemId");
					row2[2] = rs.getString("itemName");
					row2[3] = rs.getString("quantity");
					row2[4] = rs.getString("threshold");
					row2[5] = rs.getString("sellingCost");
					row2[6] = rs.getString("buyingCost");
					row2[7] = rs.getString("quantitySold");
					row2[8] = rs.getString("vendors");

					model.addRow(row2);
				}
			} catch (SQLException e){
				System.out.println(e);
			}
		} catch (SQLException e){
			System.out.println(e);
		}
		setCellsAlignment(jTable4, SwingConstants.CENTER);
	}
	
	public void resetChangeForm(){
		itemId.setText("");
		itemNameChange.setText("");
		quantityChange.setText("");
		thresholdChange.setText("");
		sellingCostChange.setText("");
		buyingCostChange.setText("");
		quantitySoldChange.setText("");
		vendorsChange.setText("");
	}
	
	public Boolean checkValuesForAdding(){
		Boolean allTrue = true;
		if(checkInt(quantityNew.getText())){
			allTrue &= true;
		}else{
			allTrue &= false;
			addItemError1.setVisible(true);
		}
		
		if(checkInt(thresholdNew.getText())){
			allTrue &= true;
		}else{
			allTrue &= false;
			addItemError2.setVisible(true);
		}
		
		if(checkInt(sellingCostNew.getText())){
			allTrue &= true;
		}else{
			allTrue &= false;
			addItemError3.setVisible(true);
		}
		
		if(checkInt(buyingCostNew.getText())){
			allTrue &= true;
		}else{
			allTrue &= false;
			addItemError4.setVisible(true);
		}
		
		if(checkInt(quantitySoldNew.getText())){
			allTrue &= true;
		}else{
			allTrue &= false;
			addItemError5.setVisible(true);
		}
		return allTrue;
    }
    
	public Boolean checkInt(String test){
		try {
			Integer.parseInt(test);
			return true;
		}catch( NumberFormatException e ) {
			return false;
		}
	}
    
	public int getNewItemId() throws SQLException{
		Connection connect = null;
		Statement statement = null;
		ResultSet resultSet = null;
		int totalNumberOfItems = 1;
		try {

			connect = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/mpss", "root" ,"saikrishna");
			statement = connect.createStatement();

			resultSet = statement.executeQuery("select count(*) from inventory");


		} catch (SQLException ex) {
			Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
		}
		while(resultSet.next()){
			totalNumberOfItems = resultSet.getInt(1)+1;
		}
		return totalNumberOfItems;
	}
    
	public void centerjLabel3(String text){
		sidePanelTitle.setText(text);
		Dimension jLabel3Size = sidePanelTitle.getSize();
		Dimension jPanel2Size = sidePanel.getSize();

		sidePanelTitle.setLocation(((jPanel2Size.width-jLabel3Size.width)/2), sidePanelTitle.getY());
	}
	
	public void focusPanel(int n, int m){
		setAllSidePanelInvisible();
		if(n == 0){
			if(m == 0)
				inventoryPane.setVisible(true);
			if(m == 1)
				newItemForm.setVisible(true);
			if(m == 2)
				inventoryTable.setVisible(true);
			if(m == 3)
				changeItemForm.setVisible(true);
		}else{
			if(n == 1){
				if(m == 0)
					transactionTable.setVisible(true);
			}else{
				if(n == 2){
					revenuePane.setVisible(true);
				}else{
					if(n == 3){
						if(m == 0)
							printPane.setVisible(true);
						if(m == 1)
							newTransactionPane.setVisible(true);
						if(m == 2)
							thresholdPrinterPanel.setVisible(true);
					}else{
						if(m == 0)
							newTransactionPane.setVisible(true);
					}
				}
			}
		}
	}
	
	public void setAllSidePanelInvisible(){
		inventoryTable.setVisible(false);
		inventoryPane.setVisible(false);
		newItemForm.setVisible(false);
		changeItemForm.setVisible(false);
		transactionTable.setVisible(false);
		printPane.setVisible(false);
		newTransactionPane.setVisible(false);
		revenuePane.setVisible(false);
		thresholdPrinterPanel.setVisible(false);
	}
	
	public void resetAllForms(){
		resetChangeForm();
		resetNewItemForm();
	}
    
	public void fillTransactionTable1(JTable table){
		
		DefaultTableModel model2 = (DefaultTableModel)table.getModel();
		model2.setRowCount(0);
		
		Connection con = null;
		ResultSet rs = null;
		PreparedStatement ps = null;


		try{
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mpss", "root" ,"saikrishna");
			ps = con.prepareStatement("select * from transactions");
			rs = ps.executeQuery();

			try {
				while ( rs.next() ){
					
					String[] row2 = new String[5];
					row2[0] = rs.getString("transactionId");
					row2[1] = rs.getString("itemId");
					row2[2] = rs.getString("quantity");
					row2[3] = rs.getString("date");
					row2[4] = rs.getString("revenue");

					model2.addRow(row2);
				}


			} catch (SQLException e){
				System.out.println(e);
			}           

		} catch (SQLException e){
			System.out.println(e);
		}
		
		setCellsAlignment(table, SwingConstants.CENTER);
	}
	
	public void setCellsAlignment(JTable table, int alignment){
		DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
		rightRenderer.setHorizontalAlignment(alignment);

		TableModel tableModel = table.getModel();

		for (int columnIndex = 0; columnIndex < tableModel.getColumnCount(); columnIndex++){
			table.getColumnModel().getColumn(columnIndex).setCellRenderer(rightRenderer);
		}
	}
	
	public void printTable(JTable table, String header) throws PrinterException{
		table.print(JTable.PrintMode.FIT_WIDTH, new MessageFormat(header), null);
	}
	
	public class CheckBoxRenderer extends JCheckBox implements TableCellRenderer {

		CheckBoxRenderer() {
			this.setHorizontalAlignment(JLabel.CENTER);
		}

		public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
			if (isSelected) {
				setForeground(table.getSelectionForeground());
				//super.setBackground(table.getSelectionBackground());
				setBackground(table.getSelectionBackground());
			} else {
				setForeground(table.getForeground());
				setBackground(table.getBackground());
			}
			try{
				setSelected(((value != null) && (Boolean.valueOf((String) value))));
			}catch(Exception e){
				setSelected(((value != null) && (Boolean.valueOf((Boolean) value))));
			}
			
			return this;
		}
}
	
	/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InventoryO;
    private javax.swing.JPanel NewTransactionO;
    private javax.swing.JPanel PrintO;
    private javax.swing.JPanel RevenueO;
    private javax.swing.JPanel TransactionO;
    private javax.swing.JButton addItemButton;
    private javax.swing.JLabel addItemError1;
    private javax.swing.JLabel addItemError2;
    private javax.swing.JLabel addItemError21;
    private javax.swing.JLabel addItemError22;
    private javax.swing.JLabel addItemError23;
    private javax.swing.JLabel addItemError24;
    private javax.swing.JLabel addItemError25;
    private javax.swing.JLabel addItemError26;
    private javax.swing.JLabel addItemError3;
    private javax.swing.JLabel addItemError4;
    private javax.swing.JLabel addItemError5;
    private javax.swing.JLabel buyRevenueMonthLabel;
    private javax.swing.JLabel buyRevenueTodayLabel;
    private javax.swing.JTextField buyingCostChange;
    private javax.swing.JTextField buyingCostNew;
    private javax.swing.JButton changeItemButton;
    private javax.swing.JPanel changeItemForm;
    private javax.swing.JLayeredPane inventoryPane;
    private javax.swing.JPanel inventoryTable;
    private javax.swing.JTextField itemId;
    private javax.swing.JTextField itemNameChange;
    private javax.swing.JTextField itemNameNew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JPanel newItemForm;
    private javax.swing.JPanel newTransactionPane;
    private javax.swing.JPanel printPane;
    private javax.swing.JTextField quantityChange;
    private javax.swing.JTextField quantityNew;
    private javax.swing.JTextField quantitySoldChange;
    private javax.swing.JTextField quantitySoldNew;
    private javax.swing.JPanel revenuePane;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel sellRevenueMonthLabel;
    private javax.swing.JLabel sellRevenueTodayLabel;
    private javax.swing.JTextField sellingCostChange;
    private javax.swing.JTextField sellingCostNew;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JLabel sidePanelTitle;
    private javax.swing.JTextField thresholdChange;
    private javax.swing.JTextField thresholdNew;
    private javax.swing.JPanel thresholdPrinterPanel;
    private javax.swing.JTable thresholdTable;
    private javax.swing.JLabel totalProfitMonthLabel;
    private javax.swing.JLabel totalProfitTodayLabel;
    private javax.swing.JLabel totalRevenueMonthLabel;
    private javax.swing.JLabel totalRevenueTodayLabel;
    private javax.swing.JPanel transactionTable;
    private javax.swing.JTextPane vendorsChange;
    private javax.swing.JTextPane vendorsNew;
    // End of variables declaration//GEN-END:variables
}
